---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../components/Layout.astro';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map(article => ({
    params: { slug: article.slug },
    props: article,
  }));
}

// type Props = CollectionEntry<'articles'>;  // Unused type

const article = Astro.props;
const { Content } = await article.render();

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}).format(new Date(article.data.publishDate));

const hasUpdatedDate = 'updatedDate' in article.data && (article.data as any).updatedDate;
const formattedUpdateDate = hasUpdatedDate
  ? new Intl.DateTimeFormat('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    }).format(new Date((article.data as any).updatedDate))
  : null;
---

<Layout
  title={article.data.title}
  description={article.data.description}
  canonicalURL={new URL(`/articles/${article.slug}`, Astro.site).href}
>
  <article class='px-4 py-16 sm:px-6 lg:px-8'>
    <div class='mx-auto max-w-4xl'>
      <!-- Article Header -->
      <header class='mb-12 text-center'>
        <div class='mb-4'>
          <a
            href='/articles'
            class='inline-flex items-center text-sm font-medium text-gray-600 transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100'
          >
            <svg class='mr-2 h-4 w-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M10 19l-7-7m0 0l7-7m-7 7h18'></path>
            </svg>
            Back to Articles
          </a>
        </div>

        <h1
          class='mb-6 text-4xl font-bold leading-tight text-gray-900 dark:text-gray-100 sm:text-5xl'
        >
          {article.data.title}
        </h1>

        <p class='mx-auto mb-8 max-w-3xl text-xl leading-relaxed text-gray-600 dark:text-gray-400'>
          {article.data.description}
        </p>

        <div
          class='flex flex-col items-center justify-center gap-4 text-sm text-gray-500 dark:text-gray-400 sm:flex-row'
        >
          <time datetime={new Date(article.data.publishDate).toISOString()}>
            Published {formattedDate}
          </time>
          {
            formattedUpdateDate && (
              <>
                <span class='hidden sm:block'>â€¢</span>
                <time
                  datetime={
                    hasUpdatedDate ? new Date((article.data as any).updatedDate).toISOString() : ''
                  }
                >
                  Updated {formattedUpdateDate}
                </time>
              </>
            )
          }
        </div>

        {
          article.data.tags.length > 0 && (
            <div class='mt-6 flex flex-wrap justify-center gap-2'>
              {article.data.tags.map(tag => (
                <span class='inline-flex items-center rounded-full bg-gray-100 px-3 py-1 text-sm font-medium text-gray-800 dark:bg-gray-800 dark:text-gray-200'>
                  {tag}
                </span>
              ))}
            </div>
          )
        }
      </header>

      <!-- Article Content -->
      <div class='prose prose-lg prose-gray max-w-none dark:prose-invert'>
        <Content />
      </div>

      <!-- Article Footer -->
      <footer class='mt-16 border-t border-gray-200 pt-8 dark:border-gray-800'>
        <div class='flex flex-col items-center justify-between gap-6 sm:flex-row'>
          <div class='text-center sm:text-left'>
            <p class='mb-2 text-gray-600 dark:text-gray-400'>
              Enjoyed this article? Let's connect!
            </p>
            <div class='flex justify-center space-x-4 sm:justify-start'>
              <a
                href='https://twitter.com/yourusername'
                target='_blank'
                rel='noopener noreferrer'
                class='text-gray-600 transition-colors hover:text-blue-500 dark:text-gray-400 dark:hover:text-blue-400'
              >
                Share on Twitter
              </a>
              <a
                href='https://linkedin.com/in/yourusername'
                target='_blank'
                rel='noopener noreferrer'
                class='text-gray-600 transition-colors hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400'
              >
                Connect on LinkedIn
              </a>
            </div>
          </div>

          <div class='text-center sm:text-right'>
            <a href='/articles' class='btn-secondary'> Read More Articles</a>
          </div>
        </div>
      </footer>
    </div>
  </article>
</Layout>
