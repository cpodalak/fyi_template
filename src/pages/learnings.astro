---
import Layout from '../components/Layout.astro';
import ReadingWidget from '../components/ReadingWidget.astro';
import GistsWidget from '../components/GistsWidget.astro';
import TemplatesWidget from '../components/TemplatesWidget.astro';
import ContactWidget from '../components/ContactWidget.astro';
import { getEntry } from 'astro:content';

// Get data from simplified content collections
const learningsPageData = await getEntry('pages', 'learnings');
const learningData = await getEntry('data', 'learning');

// Get all prompts from collection
// const allPrompts = await getCollection('prompts');
---

<Layout
  title='Learnings'
  description='Knowledge sharing through insights, code snippets, templates, and curated reading.'
>
  <div class='px-4 py-16 sm:px-6 lg:px-8'>
    <div class='mx-auto max-w-4xl'>
      <!-- Header -->
      <div class='mb-12 text-center'>
        <h1 class='mb-4 text-4xl font-bold text-gray-900 dark:text-gray-100 sm:text-5xl'>
          {learningsPageData?.data.title || 'Learnings'}
        </h1>
        <p class='mx-auto max-w-2xl text-lg text-gray-600 dark:text-gray-400'>
          {
            learningsPageData?.data.description ||
              'Knowledge sharing through insights, code snippets, templates, and curated reading.'
          }
        </p>
      </div>

      <!-- Tabbed Interface -->
      <div class='mb-8'>
        <div class='border-b border-gray-200 dark:border-gray-700'>
          <nav class='-mb-px flex space-x-8' aria-label='Tabs'>
            <button class='tab-button active' data-tab='insights'> Insights</button>
            <button class='tab-button' data-tab='gists'> Gists</button>
            <button class='tab-button' data-tab='templates'> Templates</button>
            <button class='tab-button' data-tab='reading'> Reading</button>
          </nav>
        </div>
      </div>

      <!-- Search -->
      <div class='mb-8'>
        <input
          type='text'
          placeholder='Search learnings...'
          class='w-full rounded-lg border border-gray-300 bg-white px-4 py-2 text-gray-900 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100'
        />
      </div>

      <!-- Insights Tab - Quick Wins -->
      <div id='insights' class='tab-content'>
        <h2 class='mb-6 flex items-center text-2xl font-semibold text-gray-900 dark:text-gray-100'>
          ðŸ’¡ Quick Wins
          <span class='ml-2 text-sm font-normal text-gray-500'>Bite-sized insights</span>
        </h2>
        <div class='grid gap-6'>
          {
            (learningData?.data as any)?.quickWins?.map((item: any) => (
              <div class='card p-6 transition-shadow hover:shadow-lg'>
                <h3 class='mb-2 font-semibold text-gray-900 dark:text-gray-100'>{item.title}</h3>
                <p class='mb-3 text-gray-600 dark:text-gray-400'>{item.content}</p>
                <div class='flex flex-wrap gap-2'>
                  {' '}
                  {item.tags?.map((tag: any) => (
                    <span class='rounded-full bg-blue-100 px-2 py-1 text-xs text-blue-800 dark:bg-blue-900/30 dark:text-blue-200'>
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            ))
          }
        </div>
      </div>

      <!-- Gists Tab -->
      <div id='gists' class='tab-content hidden'>
        <GistsWidget />
      </div>

      <!-- Templates Tab -->
      <div id='templates' class='tab-content hidden'>
        <TemplatesWidget />
      </div>

      <!-- Reading Tab -->
      <div id='reading' class='tab-content hidden'>
        <ReadingWidget />
      </div>
    </div>
  </div>

  <!-- Contact Widget at bottom -->
  <div class='bg-gray-50 px-4 py-16 dark:bg-gray-900/50 sm:px-6 lg:px-8'>
    <div class='mx-auto max-w-4xl'>
      <ContactWidget />
    </div>
  </div>

  <!-- Tab functionality -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const tabButtons = document.querySelectorAll('.tab-button');
      const tabContents = document.querySelectorAll('.tab-content');

      tabButtons.forEach(button => {
        button.addEventListener('click', () => {
          const targetTab = button.getAttribute('data-tab');

          // Remove active class from all buttons
          tabButtons.forEach(btn => btn.classList.remove('active'));
          // Hide all tab contents
          tabContents.forEach(content => content.classList.add('hidden'));

          // Add active class to clicked button
          button.classList.add('active');
          // Show target tab content
          if (targetTab) {
            document.getElementById(targetTab)?.classList.remove('hidden');
          }
        });
      });
    });
  </script>

  <style>
    .tab-button {
      @apply border-b-2 border-transparent px-1 py-2 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300;
    }

    .tab-button.active {
      @apply border-blue-500 text-blue-600 dark:text-blue-400;
    }

    .card {
      @apply rounded-lg border border-gray-200 bg-white shadow-sm dark:border-gray-700 dark:bg-gray-800;
    }
  </style>
</Layout>
