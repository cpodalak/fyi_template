---
import ThemeToggle from './ThemeToggle';
import { getEntry } from 'astro:content';

interface Props {
  class?: string;
}

const { class: className } = Astro.props;

// Get navigation data from simplified content collections
const siteData = await getEntry('data', 'site');
const profileData = await getEntry('profile', 'main');

// Simplified navigation - only essential pages
const navigation = (siteData?.data as any)?.navigation?.header || [
  { href: '/resume', label: 'Capability Matrix', description: 'Skillset overview with milestones and experiences' },
  { href: '/projects', label: 'Projects', description: 'Featured work' },
  { href: '/learnings', label: 'Toolkit', description: 'Knowledge & resources' },
  { href: '/articles', label: 'Articles', description: 'Technical writing' },
];

const siteName = profileData?.data?.name || 'Your Name';
---

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }

    // Add active state to current page
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('.nav-link');

    navLinks.forEach(link => {
      const href = link.getAttribute('href');
      if (href && currentPath.startsWith(href) && href !== '/') {
        link.classList.add('active');
      }
    });
  });
</script>

<header
  class={`sticky top-0 z-50 bg-white/80 dark:bg-gray-950/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-800 ${className || ''}`}
>
  <nav class='mx-auto max-w-4xl px-4 sm:px-6 lg:px-8'>
    <div class='flex items-center justify-between py-4'>
      <!-- Logo/Name -->
      <div class='flex-shrink-0'>
        <a
          href='/'
          class='text-xl font-bold text-gray-900 transition-colors hover:text-gray-600 dark:text-gray-100 dark:hover:text-gray-300'
        >
          {siteName}
        </a>
      </div>

      <!-- Navigation Links -->
      <div class='hidden md:block'>
        <div class='flex items-center space-x-8'>
          {
            navigation.map((item: any) => (
              <a
                href={item.href}
                class='nav-link text-gray-700 transition-colors hover:text-gray-900 dark:text-gray-300 dark:hover:text-gray-100'
                title={item.description || ''}
              >
                {item.label}
              </a>
            ))
          }
        </div>
      </div>

      <!-- Theme Toggle & Mobile Menu -->
      <div class='flex items-center space-x-4'>
        <!-- Interactive React Theme Toggle -->
        <ThemeToggle client:load />

        <!-- Mobile menu button -->
        <button
          id='mobile-menu-toggle'
          type='button'
          class='rounded-md p-2 text-gray-500 transition-colors hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-gray-100 md:hidden'
          aria-label='Toggle mobile menu'
        >
          <svg class='h-6 w-6' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path
              stroke-linecap='round'
              stroke-linejoin='round'
              stroke-width='2'
              d='M4 6h16M4 12h16M4 18h16'></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id='mobile-menu' class='hidden pb-4 md:hidden'>
      <div class='flex flex-col space-y-4'>
        {
          navigation.map((item: any) => (
            <a
              href={item.href}
              class='nav-link block text-gray-700 transition-colors hover:text-gray-900 dark:text-gray-300 dark:hover:text-gray-100'
              title={item.description || ''}
            >
              {item.label}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</header>
