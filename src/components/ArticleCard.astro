---
import type { CollectionEntry } from 'astro:content';

interface Props {
  article: CollectionEntry<'articles'>;
  featured?: boolean;
}

const { article, featured = false } = Astro.props;
const { title, description, publishDate, tags } = article.data;

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}).format(new Date(publishDate));
---

<article class={`card p-6 group ${featured ? 'ring-2 ring-gray-200 dark:ring-gray-700' : ''}`}>
  <div class="flex flex-col h-full">
    <!-- Article metadata -->
    <div class="flex items-center justify-between mb-3">
      <time class="text-sm text-gray-500 dark:text-gray-400" datetime={publishDate.toISOString()}>
        {formattedDate}
      </time>
      {featured && (
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
          Featured
        </span>
      )}
    </div>

    <!-- Article title -->
    <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
      <a href={`/articles/${article.slug}`} class="after:absolute after:inset-0">
        {title}
      </a>
    </h3>

    <!-- Article description -->
    <p class="text-gray-600 dark:text-gray-400 mb-4 flex-1 line-clamp-3">
      {description}
    </p>

    <!-- Tags -->
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {tags.map((tag) => (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-md text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200">
            {tag}
          </span>
        ))}
      </div>
    )}
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
