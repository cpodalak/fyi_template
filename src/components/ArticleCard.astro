---
import type { CollectionEntry } from 'astro:content';

interface Props {
  article: CollectionEntry<'articles'>;
  featured?: boolean;
}

const { article, featured = false } = Astro.props;
const { title, description, publishDate, tags } = article.data;

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}).format(new Date(publishDate));
---

<article class={`card p-6 group ${featured ? 'ring-2 ring-gray-200 dark:ring-gray-700' : ''}`}>
  <div class='flex h-full flex-col'>
    <!-- Article metadata -->
    <div class='mb-3 flex items-center justify-between'>
      <time
        class='text-sm text-gray-500 dark:text-gray-400'
        datetime={new Date(publishDate).toISOString()}
      >
        {formattedDate}
      </time>
      {
        featured && (
          <span class='inline-flex items-center rounded-full bg-blue-100 px-2.5 py-0.5 text-xs font-medium text-blue-800 dark:bg-blue-900 dark:text-blue-200'>
            Featured
          </span>
        )
      }
    </div>

    <!-- Article title -->
    <h3
      class='mb-3 text-xl font-semibold text-gray-900 transition-colors group-hover:text-blue-600 dark:text-gray-100 dark:group-hover:text-blue-400'
    >
      <a href={`/articles/${article.slug}`} class='after:absolute after:inset-0'>
        {title}
      </a>
    </h3>

    <!-- Article description -->
    <p class='mb-4 line-clamp-3 flex-1 text-gray-600 dark:text-gray-400'>
      {description}
    </p>

    <!-- Tags -->
    {
      tags.length > 0 && (
        <div class='flex flex-wrap gap-2'>
          {tags.map(tag => (
            <span class='inline-flex items-center rounded-md bg-gray-100 px-2.5 py-0.5 text-xs font-medium text-gray-800 dark:bg-gray-800 dark:text-gray-200'>
              {tag}
            </span>
          ))}
        </div>
      )
    }
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
