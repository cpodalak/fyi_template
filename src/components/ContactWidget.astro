---
// Contact Widget Component with client-side interactivity
interface Props {
  class?: string;
}

const { class: className } = Astro.props;

// Get contact data from content collections
import { getEntry } from 'astro:content';
const contactData = await getEntry('widgets', 'contact');

// Fallback data if content is not available
const defaultContact = {
  title: "Connect & Collaborate",
  methods: [
    { type: "email", href: "mailto:your.email@example.com", label: "Email" },
    { type: "linkedin", href: "https://linkedin.com/in/yourusername", label: "LinkedIn" }
  ],
  organizations: [
    { name: "Open Source Community", role: "Contributor" },
    { name: "Local Tech Meetup", role: "Organizer" }
  ]
};

const contact = contactData?.data || defaultContact;
---

<div class={`card p-6 ${className || ''}`}>
  <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-4">
    {contact.title || 'Connect & Collaborate'}
  </h3>

  <div class="space-y-4">
    <!-- Contact Methods -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
      {contact.methods?.map((method) => (
        <a
          href={method.href}
          target={method.href.startsWith('http') ? '_blank' : undefined}
          rel={method.href.startsWith('http') ? 'noopener noreferrer' : undefined}
          class="flex items-center gap-3 p-3 rounded-lg bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors group"
        >
          <svg class="w-5 h-5 text-gray-600 dark:text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400" fill={method.type === 'linkedin' ? 'currentColor' : 'none'} stroke={method.type === 'linkedin' ? 'none' : 'currentColor'} viewBox="0 0 24 24">
            {method.type === 'email' ? (
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            ) : method.type === 'linkedin' ? (
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            ) : (
              <circle cx="12" cy="12" r="3"/>
            )}
          </svg>
          <span class="text-sm font-medium text-gray-700 dark:text-gray-300">{method.label}</span>
        </a>
      ))}
    </div>

    <!-- Organizations & Groups -->
    {contact.organizations && contact.organizations.length > 0 && (
      <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
        <h4 class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3">Active In</h4>
        <div class="space-y-2">
          {contact.organizations.map((org) => (
            <div class="flex items-center justify-between p-2 rounded bg-gray-50 dark:bg-gray-800">
              <span class="text-sm text-gray-700 dark:text-gray-300">{org.name}</span>
              <span class="text-xs text-gray-500 dark:text-gray-400">{org.role}</span>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Contributing Projects -->
    <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
      <h4 class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3">Currently Contributing To</h4>
      <div class="space-y-2">
        <a
          href="https://github.com/project1"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center justify-between p-2 rounded bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors group"
        >
          <span class="text-sm text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400">Astro Framework</span>
          <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
          </svg>
        </a>
        <a
          href="https://github.com/project2"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center justify-between p-2 rounded bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors group"
        >
          <span class="text-sm text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400">TypeScript Utils</span>
          <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>
