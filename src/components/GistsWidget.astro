---
// GitHub Gists Interactive Component
interface Props {
  class?: string;
}

const { class: className } = Astro.props;

// Get gists data from content collections
import { getEntry } from 'astro:content';
const gistsData = await getEntry('widgets', 'gists');

// Fallback data if content is not available
const defaultGists: any[] = [];
const gists = gistsData?.data?.featured || defaultGists;
---

<div class={`card p-6 ${className || ''}`}>
  <div class='mb-4 flex items-center justify-between'>
    <h3 class='text-xl font-semibold text-gray-900 dark:text-gray-100'>Gists</h3>
    <a
      href='https://gist.github.com/yourusername'
      target='_blank'
      rel='noopener noreferrer'
      class='text-sm text-blue-600 transition-colors hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300'
    >
      View All Gists â†’
    </a>
  </div>

  <div class='space-y-4'>
    {
      gists.length > 0 ? (
        gists.map(gist => (
          <div class='gist-item rounded-lg border border-gray-200 p-4 transition-shadow duration-200 hover:shadow-md dark:border-gray-700'>
            <div class='mb-2 flex items-start justify-between'>
              <div class='flex-1'>
                <h4 class='mb-1 font-semibold text-gray-900 dark:text-gray-100'>
                  <a
                    href={gist.url}
                    target='_blank'
                    rel='noopener noreferrer'
                    class='transition-colors hover:text-blue-600 dark:hover:text-blue-400'
                  >
                    {gist.title}
                  </a>
                </h4>
                <p class='mb-2 text-sm text-gray-600 dark:text-gray-400'>{gist.description}</p>
              </div>
              <div class='ml-4 flex items-center gap-2'>
                <span class='inline-flex items-center rounded bg-gray-100 px-2 py-1 text-xs font-medium text-gray-800 dark:bg-gray-800 dark:text-gray-200'>
                  {gist.language}
                </span>
              </div>
            </div>

            <div class='flex items-center justify-between'>
              <div class='flex flex-wrap gap-1'>
                {gist.files?.map((file: any) => (
                  <code class='rounded bg-gray-100 px-2 py-1 text-xs text-gray-700 dark:bg-gray-800 dark:text-gray-300'>
                    {file}
                  </code>
                ))}
              </div>
              <time class='text-xs text-gray-500 dark:text-gray-400'>
                {gist.updatedAt
                  ? new Intl.DateTimeFormat('en-US', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric',
                    }).format(new Date(gist.updatedAt))
                  : 'N/A'}
              </time>
            </div>
          </div>
        ))
      ) : (
        <div class='py-8 text-center text-gray-500 dark:text-gray-400'>
          <p>No gists available at the moment.</p>
          <p class='mt-2 text-sm'>Check back later for code snippets and examples!</p>
        </div>
      )
    }
  </div>

  <!-- Interactive Filter Component -->
  <div class='mt-6 border-t border-gray-200 pt-4 dark:border-gray-700'>
    <div class='gist-filter' data-component='gist-filter'>
      <label
        for='language-filter'
        class='mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300'
      >
        Filter by Language:
      </label>
      <select
        id='language-filter'
        class='block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-gray-900 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-100'
      >
        <option value='all'>All Languages</option>
        <option value='TypeScript'>TypeScript</option>
        <option value='CSS'>CSS</option>
        <option value='JavaScript'>JavaScript</option>
      </select>
    </div>
  </div>
</div>

<script>
  // Client-side filtering functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterSelect = document.getElementById('language-filter');
    const gistItems = document.querySelectorAll('.gist-item');

    if (filterSelect) {
      filterSelect.addEventListener('change', e => {
        const selectedLanguage = (e.target as HTMLSelectElement).value;

        gistItems.forEach(item => {
          const languageSpan = item.querySelector('.inline-flex');
          const language = languageSpan?.textContent?.trim();

          if (selectedLanguage === 'all' || language === selectedLanguage) {
            (item as HTMLElement).style.display = 'block';
          } else {
            (item as HTMLElement).style.display = 'none';
          }
        });
      });
    }
  });
</script>
